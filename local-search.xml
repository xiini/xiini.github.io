<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数据库原理及应用教程（一）</title>
    <link href="/post/91c58844.html"/>
    <url>/post/91c58844.html</url>
    
    <content type="html"><![CDATA[<h2 id="第一章-数据库系统概述"><a class="markdownIt-Anchor" href="#第一章-数据库系统概述"></a> 第一章 数据库系统概述</h2><h3 id="11-数据与信息"><a class="markdownIt-Anchor" href="#11-数据与信息"></a> 1.1 数据与信息</h3><h4 id="信息information的定义"><a class="markdownIt-Anchor" href="#信息information的定义"></a> 信息(Information)的定义</h4><blockquote><p>信息是人脑对现实世界事物的存在方式、运动状态以及事物之间联系的抽象反应。</p></blockquote><h4 id="信息的特征"><a class="markdownIt-Anchor" href="#信息的特征"></a> 信息的特征</h4><ol><li>信息源于物质和能量。</li><li>信息是可以感知的。</li><li>信息是可存储、加工、传递和再生的。</li></ol><h4 id="数据date的定义"><a class="markdownIt-Anchor" href="#数据date的定义"></a> 数据(Date)的定义</h4><p>数据是由用来记录信息的可识别的符号组合的、是信息的具体表现形式。</p><h4 id="数据的表现形式"><a class="markdownIt-Anchor" href="#数据的表现形式"></a> 数据的表现形式</h4><p>数据的表现显示不仅包括数字，还包括文字、图形、声音、和频率等。</p><h3 id="12-数据库技术的产生-发展"><a class="markdownIt-Anchor" href="#12-数据库技术的产生-发展"></a> 1.2 数据库技术的产生、发展</h3><p>数据管理经历了<strong>人工管理</strong>、<strong>文件系统</strong>、<strong>数据库系统</strong>三个发展阶段。</p><h4 id="人工管理阶段的特点"><a class="markdownIt-Anchor" href="#人工管理阶段的特点"></a> 人工管理阶段的特点</h4><ol><li><strong>数据没有专门的存取设备。</strong></li><li>数据没有专门的管理软件。</li><li>数据不共享。</li><li>数据不具有独立性。</li></ol><h4 id="文件系统阶段的特点"><a class="markdownIt-Anchor" href="#文件系统阶段的特点"></a> 文件系统阶段的特点</h4><div class="note note-success">            <p>与人工管理阶段最根本的区别是<strong>数据是否能保存</strong>。</p>          </div><ol><li><strong>数据以文件形式长期保存。</strong></li><li>由文件系统管理数据。</li><li>程序与数据间有一定独立性。</li><li>文件的形式已经多样化。</li><li>数据具有一定的共享性。</li></ol><h4 id="数据库系统阶段的特点"><a class="markdownIt-Anchor" href="#数据库系统阶段的特点"></a> 数据库系统阶段的特点</h4><div class="note note-suress">            <p>与文件系统阶段最根本的区别是<strong>数据是否具有结构化</strong></p>          </div><ol><li>结构化的数据及其联系的集合。</li><li>数据共享性高、冗余度低。</li><li>数据独立性高。</li><li>有统一的数据管理和控制功能。</li></ol><h3 id="13-数据库系统的组成"><a class="markdownIt-Anchor" href="#13-数据库系统的组成"></a> 1.3 数据库系统的组成</h3><div class="note note-suress">            <p>数据库系统(DataBase System,DBS)是指在计算机系统中引入数据库后的系统。它主要由数据库、数据库用户、计算机硬件系统和计算机软件系统等几部分组成。</p>          </div><h4 id="数据库"><a class="markdownIt-Anchor" href="#数据库"></a> 数据库</h4><p>数据库(DataBase,DB)是存储在计算机内、有组织的、可共享的数据和数据对象（如表、视图、存储过程和触发器等）的集合。</p><h4 id="用户"><a class="markdownIt-Anchor" href="#用户"></a> 用户</h4><p>第三类用户：即数据库管理员（DataBase Administration，DBA）。</p><h3 id="14-数据库系统的内部体系结构"><a class="markdownIt-Anchor" href="#14-数据库系统的内部体系结构"></a> 1.4 数据库系统的内部体系结构</h3><div class="note note-suress">            <p>数据库系统内部的体系结构可表示为<strong>三级模式结构</strong>。</p>          </div><h4 id="数据库系统的三级模式结构"><a class="markdownIt-Anchor" href="#数据库系统的三级模式结构"></a> 数据库系统的三级模式结构</h4><p>数据库系统内部的体系结构从逻辑上分为<strong>外模式、模式和内模式三级抽象模式和二级映像功能</strong>。</p><ol><li><p>模式（Schema）。</p><blockquote><ul><li>模式也称为概念模式，是数据库中全体数据的逻辑结构和特征的描述。</li><li>一个数据库只有一个模式。</li></ul></blockquote></li><li><p>外模式（External Schema）。</p><blockquote><ul><li>外模式又称子模式（Subschema）或用户模式（User Schema）。</li><li>是数据库用户能看到并允许使用的那部分数据的逻辑结构和特征的描述，也是数据库用户的数据视图，即用户视图。</li><li>外模式一般是模式的子集，一个数据库可以有多个外模式。</li></ul></blockquote></li><li><p>内模式（Internal Schema）。</p><blockquote><ul><li>内模式又称存储模式（Storage Schema）或物理模式（Physical Schema）。</li><li>它是对数据库存储结构的描述，是数据在数据库内部的表示方式。</li><li>外模式可有多个，而模式、内模式只能各有一个。</li></ul></blockquote></li></ol>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>数据库原理及应用教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
      <tag>数据库原理及应用教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客日常维护</title>
    <link href="/post/d8c368ec.html"/>
    <url>/post/d8c368ec.html</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p><strong>环境</strong></p><ul><li>Windows 10</li><li>已安装 <strong>Git</strong> 、<strong>Node.js</strong></li></ul>          </div><h2 id="日常改动流程"><a class="markdownIt-Anchor" href="#日常改动流程"></a> 日常改动流程</h2><h3 id="更新博客内容"><a class="markdownIt-Anchor" href="#更新博客内容"></a> 更新博客内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g -d<br></code></pre></td></tr></table></figure><h3 id="备份hexo站点文件"><a class="markdownIt-Anchor" href="#备份hexo站点文件"></a> 备份hexo站点文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br>git commit –m <span class="hljs-string">&quot;add branch&quot;</span><br>git push <br></code></pre></td></tr></table></figure><p>将改动保备份到 github 的 hexo 分支，以便更换设备后的持续化。</p><h2 id="若是更换设备后"><a class="markdownIt-Anchor" href="#若是更换设备后"></a> 若是更换设备后</h2><div class="note note-success">            <p>确保安装 Git 与 Node.js</p>          </div><h3 id="克隆-github-中-hexo-存储库中的站点文件"><a class="markdownIt-Anchor" href="#克隆-github-中-hexo-存储库中的站点文件"></a> 克隆 github 中 hexo 存储库中的站点文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> git@github.com:name/name.github.io.git <br></code></pre></td></tr></table></figure><p>其中的 name 为 github 的用户名</p><h3 id="在克隆下来的文件夹中安装需要使用的-hexo-插件-视情况安装"><a class="markdownIt-Anchor" href="#在克隆下来的文件夹中安装需要使用的-hexo-插件-视情况安装"></a> 在克隆下来的文件夹中安装需要使用的 hexo 插件 (视情况安装)</h3><h3 id="若已有-clone-文件则可直接进行远端同步"><a class="markdownIt-Anchor" href="#若已有-clone-文件则可直接进行远端同步"></a> 若已有 clone 文件，则可直接进行远端同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git pull<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客维护</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
